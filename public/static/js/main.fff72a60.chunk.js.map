{"version":3,"sources":["pokeball.png","components/Navbar.js","components/Home.js","components/About.js","components/Contact.js","hoc/Rainbow.js","components/Post.js","actions/postActions.js","App.js","registerServiceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","withRouter","props","className","to","exact","Home","posts","this","postList","length","map","post","key","id","src","Pokeball","alt","title","body","Component","connect","state","About","Rainbow","WrappedComponent","Math","floor","random","Post","handleClick","deletePost","history","push","onClick","ownProps","match","params","post_id","find","dispatch","type","App","path","component","Contact","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initState","rootReducer","action","newPosts","filter","store","createStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fff72a60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.f10bf078.png\";","import React from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom'\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"nav-wrapper red darken-3\">\n      <div className=\"container\">\n        <Link className=\"brand-logo\" to=\"/\">Poke' Times</Link>\n        <ul className=\"right\">\n          <li><NavLink exact to=\"/\">Home</NavLink></li>\n          <li><NavLink to='/about'>About</NavLink></li>\n          <li><NavLink to='/contact'>Contact</NavLink></li>\n        </ul>\n      </div>\n    </nav> \n  )\n}\n\nexport default withRouter(Navbar)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Pokeball from '../pokeball.png'\nimport { connect } from 'react-redux'\n\nclass Home extends Component {\n  render(){\n    const { posts } = this.props\n    const postList = posts.length ? (\n      posts.map(post => {\n        return (\n          <div className=\"post card\" key={post.id}>\n            <img src={Pokeball} alt=\"A Pokeball\" />\n            <div className=\"card-content\">\n              <Link to={'/' + post.id}>\n                <span className=\"card-title red-text\">{post.title}</span>\n              </Link>\n              <p>{post.body}</p>\n            </div>\n          </div>\n        )\n      })\n    ) : (\n      <div className=\"center\">No posts to show</div>\n    );\n\n    return (\n      <div>\n        <div className=\"container home\">\n          <h4 className=\"center\">Home</h4>\n          {postList}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts\n  }\n}\n\nexport default connect(mapStateToProps)(Home)","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <h4 className=\"center\">About</h4>\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport Rainbow from '../hoc/Rainbow'\n\nconst Contact = (props) => {\n  return (\n    <div>\n      <div className=\"container\">\n        <h4 className=\"center\">Contact</h4>\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Rainbow(Contact)","import React from 'react'\n\nconst Rainbow = (WrappedComponent) => {\n\n  const colours = ['red', 'pink', 'orange', 'blue', 'green', 'yellow'];\n  const randomColour = colours[Math.floor(Math.random() * 6)];\n  const className = randomColour + '-text';\n\n  return (props) => (\n    <div className={className}>\n      <WrappedComponent {...props} />\n    </div>  \n  )\n  \n}\n\nexport default Rainbow\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deletePost} from '../actions/postActions'\n\nclass Post extends Component {\n  handleClick = () => {\n    this.props.deletePost(this.props.post.id);\n    this.props.history.push('/');\n  }\n  render() {\n\n    const post = this.props.post ? (\n      <div className=\"post\">\n        <h4 className=\"center\">{this.props.post.title}</h4>\n        <p>{this.props.post.body}</p>\n        <div className=\"center\">\n          <button className=\"btn grey\" onClick={this.handleClick}>\n            Delete Post\n          </button>\n        </div>\n      </div>\n    ) : (\n      <div className=\"center\">Loading post...</div>\n    );\n\n    return (\n      <div className=\"container\">\n        {post}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.post_id;\n  return {\n    post: state.posts.find(post => post.id === id)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deletePost: (id) => dispatch(deletePost(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\n","export const deletePost = (id) =>{\r\n    return {\r\n        type: 'DELETE_POST',\r\n        id\r\n    }\r\n}","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport Post from './components/Post'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/about' component={About} />\n            <Route path='/contact' component={Contact} />\n            <Route path='/:post_id' component={Post} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  posts: [\n    {id: '1', title: 'Squirtle Laid an Egg', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'},\n    {id: '2', title: 'Charmander Laid an Egg', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'},\n    {id: '3', title: 'a Helix Fossil was Found', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'}\n  ]\n}\n\n\n\nconst rootReducer = (state = initState, action) => {\n  console.log(action);\n  if(action.type === 'DELETE_POST'){\n   let newPosts = state.posts.filter(post => {\n     return post.id !== action.id\n   });\n   return {\n     ...state,\n     posts: newPosts\n   }\n  }\n  return state;\n}\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}